//
//  ViewController.swift
//  VerificationOfUserRegistrationData
//
//  Created by –ï–∫–∞—Ç–µ—Ä–∏–Ω–∞ –ë–æ—Ä–æ–≤–∫–æ–≤–∞ on 25.05.2021.
//

import UIKit

class LoginViewController: UIViewController {
    
    @IBOutlet weak var userNameTextField: UITextField!
    @IBOutlet weak var userPasswordTextField: UITextField!
    
    @IBOutlet weak var forgetNameBtn: UIButton!
    @IBOutlet weak var forgetPasswordBtn: UIButton!
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        makePropertyForTextField()
        
    }
    
    override func viewWillLayoutSubviews() {
        super.viewWillLayoutSubviews()
        
        userNameTextField.layer.cornerRadius = 15
        userPasswordTextField.layer.cornerRadius = 15
        forgetNameBtn.layer.cornerRadius = 10
        forgetPasswordBtn.layer.cornerRadius = 10
    }
    
    //    –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–∫—Ä—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –ª—é–±–æ–º –∫–ª–∏–∫–µ –∑–∞ –ø—Ä–µ–¥–µ–ª–∞–º–∏ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—è, –Ω–æ –Ω–µ –Ω–∞ —ç–ª–µ–º–µ–Ω—Ç–∞—Ö UI
    override func touchesBegan(_ touches: Set<UITouch>, with event: UIEvent?) {
        super.touchesBegan(touches, with: event)
        self.view.endEditing(true)
        
    }
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if checkTextFieldText() {
            guard segue.identifier == "Autorization" else {
                return
            }
            guard let destination = segue.destination as? WelcomeViewController else { return}
            destination.userName = userNameTextField.text
        }
    }
    
    //    —Å–æ–∑–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è –ø–æ unwind segue –Ω–∞ —ç—Ç–æ—Ç vc, –∑–∞—Ç–µ–º –∫–Ω–æ–ø–∫—É –≤—ã—Ö–æ–¥–∞ –ø–µ—Ä–µ—Ç—è–≥–∏–≤–∞–µ–º –Ω–∞ —ç–∫–∑–∏—Ç –≤ —Å—Ç–æ—Ä–∏–±–æ—Ä–¥–µ, –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö unwind segue –∑–∞–¥–∞–µ–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∏ –æ—Ç–º–µ—á–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–µ—Ç–æ–¥–∞, –≤—Å—é —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é –º–µ—Ç–æ–¥–∞ –ø–∏—à–µ–º –≤ —ç—Ç–æ–º vc, —Å–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —ç—Ç–æ –∏–º–µ–Ω–Ω–æ —ç—Ç–æ—Ç unwind segue, –ø–æ—Ç–æ–º –¥–µ–ª–∞–µ–º –æ—á–∏—Å—Ç–∫—É —Ç–µ–∫—Å—Ç—Ñ–∏–ª–¥–æ–≤ –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∞–ª–µ—Ä—Ç —Å –ø—Ä–æ—â–∞–Ω–∏–µ–º
    @IBAction func unwindToLoginViewController(_ unwindSegue: UIStoryboardSegue) {
        guard unwindSegue.identifier == "LogOut" else {return}
        
        userNameTextField.text = ""
        userPasswordTextField.text = ""
        
        guard let source = unwindSegue.source as? WelcomeViewController else {return}
        doAlertToBtn(title: "–î–æ —Å–≤–∏–¥–∞–Ω–∏—è, \(source.userName!) üåπüåπüåπ")
    }
    
    @IBAction func logInBtnPressed(_ sender: UIButton) {
        checkTextFieldText()
    }
    
    @IBAction func forgetBtnPressed(_ sender: UIButton) {
        if sender.tag == 1 {
            doAlertToBtn(title: "–í–∞—Å –∑–æ–≤—É—Ç: –ê–Ω–∞—Å—Ç–∞—Å–∏—è")
            
        } else if sender.tag == 2{
            doAlertToBtn(title: "–í–∞—à –ø–∞—Ä–æ–ª—å: –∫—Ä–æ–ª–∏–∫–∏")
        }
    }
    
    private func doAlertToBtn (title: String) {
        let alert = UIAlertController(title: title,
                                      message: nil,
                                      preferredStyle: .alert
        )
        let alertAction = UIAlertAction(title: "–ü–æ–Ω—è—Ç–Ω–µ–Ω—å–∫–æ",
                                        style:.default,
                                        handler: nil
        )
        alert.addAction(alertAction)
        present(alert, animated: true, completion: nil)
    }
    private func makePropertyForTextField() {
        userNameTextField.delegate = self
        //        –æ—Ç–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ–∫–æ—Ä—Ä–µ–∫—Ü–∏—é –¥–ª—è –∏–º–µ–Ω–∏
        userNameTextField.autocorrectionType = .no
        userNameTextField.clearButtonMode = .whileEditing
        userNameTextField.returnKeyType = .next
        
        //        —Å–∫—Ä—ã–≤–∞–µ–º –≤–≤–æ–¥–∏–º—ã–π –ø–∞—Ä–æ–ª—å
        userPasswordTextField.isSecureTextEntry = true
        userPasswordTextField.delegate = self
        userPasswordTextField.clearButtonMode = .whileEditing
        userPasswordTextField.returnKeyType = .done
        
    }
    
    private func checkTextFieldText () -> Bool {
        
        if userNameTextField.text!.isEmpty &&
            userPasswordTextField.text!.isEmpty {
            
            doAlertToBtn(title: "–°–Ω–∞—á–∞–ª–∞ –≤–≤–µ–¥–∏—Ç–µ –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ü–∞—Ä–æ–ª—å")
            userNameTextField.returnKeyType = .next
            
            return false
            
        } else if userNameTextField.text != "–ê–Ω–∞—Å—Ç–∞—Å–∏—è" {
            
            doAlertToBtn(title: "–í–∞—Å –∑–æ–≤—É—Ç: –ê–Ω–∞—Å—Ç–∞—Å–∏—è")
            userNameTextField.text = "–ê–Ω–∞—Å—Ç–∞—Å–∏—è"
            
            return false
            
        } else if userPasswordTextField.text != "–∫—Ä–æ–ª–∏–∫–∏" {
            
            doAlertToBtn(title: "–í–∞—à –ø–∞—Ä–æ–ª—å: –∫—Ä–æ–ª–∏–∫–∏")
            //            –µ—Å–ª–∏ —Å—Ç—Ä–æ—á–∫—É –Ω–∏–∂–µ —Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å, —Ç–æ –ø–æ—á–µ–º—É —Ç–æ –ø—Ä–∏ –≤–≤–æ–¥–µ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –∏–º–µ–Ω–∏ –ø–æ–¥—Ç—Å–∞–≤–ª—è–µ—Ç—Å—è –∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏–º—è, –∏ –ø–∞—Ä–æ–ª—å, –Ω–µ –ø–æ–Ω—è—Ç–Ω–æ –ø–æ—á–µ–º—É...–±—É–¥—É –±–ª–∞–≥–æ–¥–∞—Ä–Ω–∞, –µ—Å–ª–∏ –ø–æ–¥—Å–∫–∞–∂–µ—Ç–µ:)
            //            userPasswordTextField.text = "–∫—Ä–æ–ª–∏–∫–∏"
            return false
            
        } else if userNameTextField.text == "–ê–Ω–∞—Å—Ç–∞—Å–∏—è" &&
                    userPasswordTextField.text == "–∫—Ä–æ–ª–∏–∫–∏" {
            
            return true
            
        }
        return false
    }
}


extension LoginViewController : UITextFieldDelegate {
    func textFieldShouldReturn(_ textField: UITextField) -> Bool {
        
        userPasswordTextField.resignFirstResponder()
        return true
    }
}
